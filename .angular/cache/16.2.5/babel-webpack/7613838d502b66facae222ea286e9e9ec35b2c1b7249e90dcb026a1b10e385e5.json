{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass TaskService {\n  constructor() {\n    //CreateTask: EventEmitter<string> = new EventEmitter<string>();\n    this.CreateTask = new Subject();\n  }\n  // OnCreateTask(value: string){\n  //     this.CreateTask.emit(value);\n  // }\n  OnCreateTask(value) {\n    this.CreateTask(value);\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { TaskService };","map":{"version":3,"names":["Subject","TaskService","constructor","CreateTask","OnCreateTask","value","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\Angular Course syllabus by Vinay\\angular-16-complete-course-main\\09-angular-rxjs-and-observables\\start\\src\\app\\Services\\task.service.ts"],"sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TaskService{\r\n\r\n    //CreateTask: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    CreateTask = new Subject<string>();\r\n\r\n    // OnCreateTask(value: string){\r\n    //     this.CreateTask.emit(value);\r\n    // }\r\n\r\n    OnCreateTask(value: string){\r\n        this.CreateTask(value);\r\n    }\r\n}"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAC9B,MAGaC,WAAW;EAHxBC,YAAA;IAKI;IAEA,KAAAC,UAAU,GAAG,IAAIH,OAAO,EAAU;;EAElC;EACA;EACA;EAEAI,YAAYA,CAACC,KAAa;IACtB,IAAI,CAACF,UAAU,CAACE,KAAK,CAAC;EAC1B;EAAC,QAAAC,CAAA,G;qBAZQL,WAAW;EAAA;EAAA,QAAAM,EAAA,G;WAAXN,WAAW;IAAAO,OAAA,EAAXP,WAAW,CAAAQ,IAAA;IAAAC,UAAA,EAFR;EAAM;;SAETT,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}