{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { from, fromEvent } from 'rxjs';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.title = 'angular-observables';\n    this.data = [];\n    this.array1 = [1, 3, 5, 7, 9];\n    this.array2 = ['A', 'B', 'C', 'D'];\n    //1.CREATE AN OBSERVABLE using observable constructor\n    // myObservable=new Observable((observer) =>{\n    //   //observer.next([1,2,3,4,5]);\n    //   // streaming of data\n    // setTimeout(() => {observer.next(1)}, 1000);\n    // setTimeout(() => {observer.next(2)}, 2000);\n    // setTimeout(() => {observer.next(3)}, 3000);\n    // //setTimeout(() => {observer.error(new Error('Something went wrong. Please try again later.'))},4000);\n    // setTimeout(() => {observer.next(4)}, 4000);\n    // setTimeout(() => {observer.next(5)}, 5000);\n    // setTimeout(() => {observer.complete()}, 6000);\n    // });\n    //2.Creat an observable using 'of' operator of rxjs\n    // myObservable = of(this.array1,this.array2,20,30,'Hello',true);\n    //3.Creat an observable using 'from' operator of rxjs\n    //myObservable = from(this.array1);\n    // converting promise into observable but it will emit the data same as promise\n    this.promiseData = new Promise((resolve, reject) => {\n      resolve([10, 20, 30, 40, 50]);\n    });\n    this.myObservable = from(this.promiseData);\n  }\n  GetAsyncData() {\n    //Observer\n    //next,error,complete\n    // this.myObservable.subscribe((val:any) =>{\n    //     this.data.push(val);       \n    // },\n    //   (err) =>{\n    //       alert(err.message);\n    //   },\n    // () => {\n    //   alert('All the data is streamed!');\n    // });\n    this.myObservable.subscribe({\n      next: val => {\n        this.data.push(val);\n        console.log(val);\n      },\n      error(err) {\n        alert(err.message);\n      },\n      complete() {\n        alert('All the data is streamed!');\n      }\n    });\n  }\n  buttonClicked() {\n    this.createBtnObs = fromEvent(this.createBtn.nativeElement, 'click').subscribe(data => {\n      console.log(data);\n      this.showItem();\n    });\n  }\n  ngAfterViewInit() {\n    this.buttonClicked();\n  }\n  showItem() {\n    let div = document.createElement('div');\n    div.innerText = 'Item';\n    div.className = 'data-list';\n    document.getElementById('container').appendChild(div);\n  }\n};\n__decorate([ViewChild('createbtn')], AppComponent.prototype, \"createBtn\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","ViewChild","from","fromEvent","AppComponent","constructor","title","data","array1","array2","promiseData","Promise","resolve","reject","myObservable","GetAsyncData","subscribe","next","val","push","console","log","error","err","alert","message","complete","buttonClicked","createBtnObs","createBtn","nativeElement","showItem","ngAfterViewInit","div","document","createElement","innerText","className","getElementById","appendChild","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Angular Course syllabus by Vinay\\angular-16-complete-course-main\\09-angular-rxjs-and-observables\\start\\src\\app\\app.component.ts"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { from, fromEvent, Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit{\n  title = 'angular-observables';\n\n  data: any[] = [];\n\n  @ViewChild('createbtn') createBtn : ElementRef;\n   createBtnObs;\n  \n  array1 = [1,3,5,7,9];\n  array2 = ['A','B','C','D'];\n\n\n  //1.CREATE AN OBSERVABLE using observable constructor\n\n  // myObservable=new Observable((observer) =>{\n  //   //observer.next([1,2,3,4,5]);\n\n  //   // streaming of data\n  // setTimeout(() => {observer.next(1)}, 1000);\n  // setTimeout(() => {observer.next(2)}, 2000);\n  // setTimeout(() => {observer.next(3)}, 3000);\n  // //setTimeout(() => {observer.error(new Error('Something went wrong. Please try again later.'))},4000);\n  // setTimeout(() => {observer.next(4)}, 4000);\n  // setTimeout(() => {observer.next(5)}, 5000);\n  // setTimeout(() => {observer.complete()}, 6000);\n  // });\n\n  //2.Creat an observable using 'of' operator of rxjs\n\n // myObservable = of(this.array1,this.array2,20,30,'Hello',true);\n\n //3.Creat an observable using 'from' operator of rxjs\n\n //myObservable = from(this.array1);\n\n // converting promise into observable but it will emit the data same as promise\n promiseData = new Promise((resolve,reject) => {\n      resolve([10,20,30,40,50]);\n })\n\n myObservable = from(this.promiseData);\n\n  GetAsyncData(){\n\n    //Observer\n    //next,error,complete\n    // this.myObservable.subscribe((val:any) =>{\n    //     this.data.push(val);       \n    // },\n    //   (err) =>{\n    //       alert(err.message);\n    //   },\n    // () => {\n    //   alert('All the data is streamed!');\n    // });\n\n    this.myObservable.subscribe({\n      next: (val: any) => {\n        this.data.push(val);\n        console.log(val);\n        \n      },\n      error(err){\n        alert(err.message);\n      },\n      complete(){\n        alert('All the data is streamed!');\n      }\n    })\n\n  }\n\n    buttonClicked(){\n      this.createBtnObs = fromEvent(this.createBtn.nativeElement, 'click')\n      .subscribe((data) => {\n        console.log(data);\n        this.showItem();\n      });\n    }\n\n    ngAfterViewInit(){\n      this.buttonClicked()\n    }\n\n    showItem(){\n      let div = document.createElement('div');\n      div.innerText = 'Item';\n      div.className = 'data-list';\n      document.getElementById('container').appendChild(div);\n    }\n\n}\n"],"mappings":";AAAA,SAAwBA,SAAS,EAAcC,SAAS,QAAQ,eAAe;AAC/E,SAASC,IAAI,EAAEC,SAAS,QAAwB,MAAM;AAOtD,IAAaC,YAAY,GAAzB,MAAaA,YAAY;EAAzBC,YAAA;IACE,KAAAC,KAAK,GAAG,qBAAqB;IAE7B,KAAAC,IAAI,GAAU,EAAE;IAKhB,KAAAC,MAAM,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IACpB,KAAAC,MAAM,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;IAG1B;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAED;IAEA;IAEA;IAEA;IACA,KAAAC,WAAW,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAACC,MAAM,KAAI;MACxCD,OAAO,CAAC,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEF,KAAAE,YAAY,GAAGZ,IAAI,CAAC,IAAI,CAACQ,WAAW,CAAC;EAmDtC;EAjDEK,YAAYA,CAAA;IAEV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,IAAI,CAACD,YAAY,CAACE,SAAS,CAAC;MAC1BC,IAAI,EAAGC,GAAQ,IAAI;QACjB,IAAI,CAACX,IAAI,CAACY,IAAI,CAACD,GAAG,CAAC;QACnBE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAElB,CAAC;MACDI,KAAKA,CAACC,GAAG;QACPC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;MACpB,CAAC;MACDC,QAAQA,CAAA;QACNF,KAAK,CAAC,2BAA2B,CAAC;MACpC;KACD,CAAC;EAEJ;EAEEG,aAAaA,CAAA;IACX,IAAI,CAACC,YAAY,GAAGzB,SAAS,CAAC,IAAI,CAAC0B,SAAS,CAACC,aAAa,EAAE,OAAO,CAAC,CACnEd,SAAS,CAAET,IAAI,IAAI;MAClBa,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;MACjB,IAAI,CAACwB,QAAQ,EAAE;IACjB,CAAC,CAAC;EACJ;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACL,aAAa,EAAE;EACtB;EAEAI,QAAQA,CAAA;IACN,IAAIE,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACvCF,GAAG,CAACG,SAAS,GAAG,MAAM;IACtBH,GAAG,CAACI,SAAS,GAAG,WAAW;IAC3BH,QAAQ,CAACI,cAAc,CAAC,WAAW,CAAC,CAACC,WAAW,CAACN,GAAG,CAAC;EACvD;CAEH;AAtFyBO,UAAA,EAAvBvC,SAAS,CAAC,WAAW,CAAC,C,8CAAwB;AALpCG,YAAY,GAAAoC,UAAA,EALxBxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWvC,YAAY,CA2FxB;SA3FYA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}